@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

@{
    Layout = "~/Views/Shared/_videoEN.cshtml";
}

@{
    ViewData["Title"] = "Video";
    ViewData["MetaTitle"] = "訊聯細胞智藥-再生醫療製劑、細胞製劑、外泌體Exosome(訊聯生技集團)";
    ViewData["MetaDescription"] = "訊聯細胞智藥股份有限公司為訊聯集團旗下訊聯生技、訊聯基因數位2家公司，整合3大核心能力「再生醫學/細胞治療」、「精準健康/基因醫學」、「數位科技/智慧研發」的新引擎，主攻再生醫療製劑、細胞製劑、智慧研發、智慧健康、外泌體Exosome、基因及細胞治療等先進療法，滿足全球更廣大的健康需求。目前7款細胞治療製劑開發中：急性呼吸窘迫症候群ARDS、肺部纖維化、慢性腎衰竭、急性傷口修復、慢性傷口癒合、退化性關節炎、乾眼症";
    ViewData["MetaKeywords"] = "訊聯生技集團, 訊聯,細胞智藥,細胞製劑,再生醫療製劑,外泌體,Exosome,急性呼吸窘迫症候群,ARDS,肺部纖維化,慢性腎衰竭,急性傷口修復,慢性傷口癒合,糖尿病足潰瘍,退化性關節炎,乾眼症,CDMO";
    ViewData["MetaOgTitle"] = "訊聯細胞智藥";
    ViewData["MetaOgDescription"] = "訊聯細胞智藥";
}

<section class="meetings-page" id="meetings">
    <div class="container">

                        @*  grid *@
                        <div class="row    grid " id="photos__container">

                            <div class="photo col-lg-4 templatemo-item-col all ">
                                <div class="meeting-item">
                                    <div class="thumb">
                                        <a href="https://youtu.be/-7jDbiHNE4E" target="_blank">
                                            <img src="~/assets/images/video/video-2-en.jpg" alt="video">
                                        </a>
                                    </div>
                                    <div class="down-content d-flex flex-column">
                                        <div class="date pb-1">
                                            <h6 class="text-start">2024/12/18</h6>
                                        </div>
                                        <a href="https://youtu.be/-7jDbiHNE4E" target="_blank">
                                            <h4 class="mb-4">
                                                A New Favorite in Aesthetics: BIONET’s Exosomes
                                            </h4>
                                        </a>
                                    </div>
                                </div>
                            </div>



                        </div>

    </div>

</section>

@* <script src="~/EN/~/assets/js/isotope.js"></script> *@
@* <script>
    const gap = 10; // 每张照片的间隙
    const photosContainer = document.getElementById('photos__container');
    const photos = document.getElementsByClassName('photo');

    function cascadeDisplay() {
        const photosContainerWidth = photosContainer.offsetWidth;
        const photoWidth = photos[0].offsetWidth;
        const columnsCount = Math.floor(photosContainerWidth / (photoWidth + gap)); // 计算一行的列数
        const columnHeights = Array(columnsCount).fill(0); // 初始化每列的高度数组

        for (let i = 0; i < photos.length; i++) {
            // 找到当前高度最小的列
            const minHeight = Math.min(...columnHeights);
            const columnIndex = columnHeights.indexOf(minHeight);

            // 设置当前照片的位置
            photos[i].style.top = minHeight + 'px';
            photos[i].style.left = columnIndex * (photoWidth + gap) + 'px';

            // 更新列高度
            columnHeights[columnIndex] += photos[i].offsetHeight + gap;
        }

        // 设置容器高度为最高列的高度
        photosContainer.style.height = Math.max(...columnHeights) + 'px';
    }

    // 页面加载时初始化布局
    window.onload = function () {
        cascadeDisplay();
    };

    // 窗口大小变化时重新布局
    window.onresize = function () {
        cascadeDisplay();
    };

</script> *@

<script>
    const horizontalGap = 20; // 橫向間距
    const verticalGap = 10;   // 縱向間距
    const photosContainer = document.getElementById('photos__container');
    const photos = document.getElementsByClassName('photo');

    function cascadeDisplay() {
        const photosContainerWidth = photosContainer.offsetWidth;
        const photoWidth = photos[0].offsetWidth;
        const columnsCount = Math.floor(photosContainerWidth / (photoWidth + horizontalGap)); // 計算列數
        const columnHeights = Array(columnsCount).fill(0); // 初始化每列高度

        for (let i = 0; i < photos.length; i++) {
            // 找到當前高度最小的列
            const minHeight = Math.min(...columnHeights);
            const columnIndex = columnHeights.indexOf(minHeight);

            // 設定當前照片的位置
            photos[i].style.top = minHeight + 'px';
            photos[i].style.left = columnIndex * (photoWidth + horizontalGap) + 'px';

            // 更新該列高度（加上當前照片高度與縱向間距）
            columnHeights[columnIndex] += photos[i].offsetHeight + verticalGap;
        }

        // 設置容器高度為最高列的高度
        photosContainer.style.height = Math.max(...columnHeights) + 'px';
    }

    // 頁面加載時初始化布局
    window.onload = function () {
        cascadeDisplay();
    };

    // 窗口大小變化時重新布局
    window.onresize = function () {
        cascadeDisplay();
    };
</script>